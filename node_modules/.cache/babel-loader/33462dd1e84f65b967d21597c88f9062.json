{"ast":null,"code":"import { createSelector } from \"reselect\";\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["C:/Users/think/E-commerce/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAASA,cAAT,QAA+B,UAA/B;;AACA,MAAMC,UAAU,GAAEC,KAAK,IAAEA,KAAK,CAACC,IAA/B;;AACA,OAAO,MAAMC,eAAe,GAACJ,cAAc,CACvC,CAACC,UAAD,CADuC,EAEvCE,IAAI,IAAEA,IAAI,CAACE,SAF4B,CAApC;AAIP,OAAO,MAAMC,gBAAgB,GAACN,cAAc,CACxC,CAACC,UAAD,CADwC,EAExCE,IAAI,IAAIA,IAAI,CAACI,MAF2B,CAArC;AAIP,OAAO,MAAMC,oBAAoB,GAACR,cAAc,CAC5C,CAACI,eAAD,CAD4C,EAE5CC,SAAS,IACTA,SAAS,CAACI,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QADtE,EAEI,CAFJ,CAH4C,CAAzC;AASP,OAAO,MAAMC,eAAe,GAACb,cAAc,CACvC,CAACI,eAAD,CADuC,EAEvCC,SAAS,IACTA,SAAS,CAACI,MAAV,CACI,CAACC,mBAAD,EAAsBC,QAAtB,KAAmCD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAkBD,QAAQ,CAACG,KADxF,EAEI,CAFJ,CAHuC,CAApC","sourcesContent":["import { createSelector } from \"reselect\";\r\nconst selectCart =state=>state.cart;\r\nexport const selectCartItems=createSelector(\r\n    [selectCart],\r\n    cart=>cart.cartItems\r\n);\r\nexport const selectCartHidden=createSelector(\r\n    [selectCart] ,\r\n    cart => cart.hidden\r\n)\r\nexport const selectCartItemsCount=createSelector(\r\n    [selectCartItems] ,\r\n    cartItems=>\r\n    cartItems.reduce(\r\n        (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity,\r\n        0\r\n        )\r\n   \r\n)\r\nexport const selectCartTotal=createSelector(\r\n    [selectCartItems] ,\r\n    cartItems=>\r\n    cartItems.reduce(\r\n        (accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity*cartItem.price,\r\n        0\r\n        )\r\n)\r\n    \r\n"]},"metadata":{},"sourceType":"module"}